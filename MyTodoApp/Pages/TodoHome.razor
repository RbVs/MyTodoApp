@page "/todo-home"
@inject IRepository<TodoList> TodoListRepository

<div class="row">
    <div class="col-md-3">
        <p>My lists</p>

        <AddNewList ListAdded="@RefreshList"></AddNewList>

        @if (TodoLists == null)
        {
            <p>Loading...</p>
        }
        else
        {
            <SfListView DataSource="@TodoLists" CssClass="sflist" @ref="_todoListView">
                <ListViewFieldSettings TValue="TodoList" Id="Ident" Text="Name"></ListViewFieldSettings>
            </SfListView>
        }
    </div>
    <div class="col-md-7">
        <p>My todos</p>
        <SfButton IsPrimary="true" @onclick="Delete">Delete selected List</SfButton>
    </div>
    <div class="col-md-2">
        <p>maybe some options</p>
    </div>
</div>


@code{
    private List<TodoList> TodoLists { get; set; }

    SfListView<TodoList> _todoListView;

    protected override Task OnInitializedAsync()
    {
        TodoLists = TodoListRepository.GetAll();
        return base.OnInitializedAsync();
    }

    void RefreshList(bool added)
    {
        TodoLists = TodoListRepository.GetAll();
    }

    private async Task Delete()
    {
        var item = await _todoListView.GetSelectedItems();
        var x = item.Data;
        _todoListView.RemoveItems(x);
    }

}

<style>
    .sflist{
    margin: 10px 0px    
    }
</style>